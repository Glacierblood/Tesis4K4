@using Microsoft.AspNet.Identity
@model FinalTest1.ViewModel.AdopcionViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    <script src="~/scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
            $(document).ready(function () {

                $("input[name=selectedAnimalId").change(function () {
                    //cada vez que el estado de un radio button cambia, asignamos a nuestro campo hiden el valor del readio seleccionado, que en este caso es el id del animal seleccionado
                    $("#adopcion_animalId").val($('input[name=selectedAnimalId]:checked').val());

                })
                $("#testButton").on("click", function () {
                    alert($("#animalId").val());
                })

            })

    </script>
    <script>
    $(function () {
        $("#adopcion_fechaFinColaboracion").datepicker();
    });
    </script>

    @Html.AntiForgeryToken()

    <table class="table" id="myTable">
        <thead>
            <tr>
                <th>
                    Nombre
                </th>
                <th>
                    Raza
                </th>
                <th>
                    tamanio
                </th>
                <th>
                    edad
                </th>
                <th>
                    caracteristicas
                </th>
                <td>
                    ADOMPTAME!
                </td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.animal)
            {
                if (item.enAdopcion == true)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.raza.nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.tamanio.nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.edad)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.caracteristicas)
                        </td>
                        <td>
                            @Html.RadioButton("selectedAnimalId", item.Id)
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <div class="form-horizontal">
        <h4>Adopcion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.adopcion.voluntarioId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.adopcion.voluntarioId, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.GetUserId(), @type = "hidden" } })
                @Html.ValidationMessageFor(model => model.adopcion.voluntarioId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.adopcion.nombreVoluntario, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.adopcion.nombreVoluntario, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.GetUserName(), @type = "hidden" } })
                @Html.ValidationMessageFor(model => model.adopcion.nombreVoluntario, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.adopcion.animalId, "animalId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adopcion.animalId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.adopcion.animalId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.adopcion.tipoAdopcionId, "tipoAdopcionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("tipoAdopcionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.adopcion.tipoAdopcionId, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.adopcion.esTemporal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.adopcion.esTemporal)
                    @Html.ValidationMessageFor(model => model.adopcion.esTemporal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
               

        <div class="form-group">
            @Html.LabelFor(model => model.adopcion.fechaFin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adopcion.fechaFin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adopcion.fechaFin, "", new { @class = "text-danger" })
            </div>
        </div>
                

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
