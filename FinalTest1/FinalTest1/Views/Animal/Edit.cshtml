@model FinalTest1.Models.Entidades.Animal

@{
    ViewBag.Title = "Editar Mascota";
}


<script src="/Scripts/jquery-1.10.2.js"
        type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#razaId option').remove();
        $('#razaId').append('<option value=""></option');
        // Populate categories when the page is loaded.
        $.getJSON('/Animal/getEspecies', function (data) {
            // Ajax success callback function.
            // Populate dropdown from Json data returned from server.
            $('#especieId option').remove();
            $('#especieId').append('<option value=""></option');
            for (i = 0; i <= data.length; i++) {
                $('#especieId').append('<option value="' +
                data[i].Id + '">' + data[i].nombre + '</option');
            }
        }).fail(function (jqXHR, textStatus, errorThrown) {
            // Ajax fail callback function.
            alert('Errorv Obteniendo las especies!');
        });

        // First dropdown selection change event handler
        $('#especieId').change(function () {
            var catid = $(this).find(":selected").val();
            if (catid.length > 0) {
                // Populate products.
                $.getJSON('/Animal/getRazas', { intCatID: catid }, function (data) {
                    // Ajax success callback function.
                    // Populate dropdown from Json data returned from server.
                    $('#razaId option').remove();
                    $('#razaId').append('<option value=""></option');
                    for (i = 0; i <= data.length; i++) {
                        $('#razaId').append('<option value="' +
                        data[i].Id + '">' + data[i].nombre + '</option');
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    // Ajax fail callback function.
                    alert('Error getting products!');
                });
            }
            else {
                // Remove all second dropdown options if
                // empty option is selected in first dropdown.
                $('#razaId option').remove();
                $('#razaId').append('<option value=""></option');
            }
        });
    });
</script>




<h2>Editar Mascota</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Animal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaNac, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaNac, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.caracteristicas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.caracteristicas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.caracteristicas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tamanioId, "tamanioId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("tamanioId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tamanioId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="control-label col-md-2">
                <label for="especieId">Especie</label>
            </div>
            <div class="col-md-10">
                <select class="form-control" id="especieId" name="especieId">
                    <option value=""></option>
                </select>
            </div>

        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.razaId, "Raza", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("razaId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.razaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.enAdopcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.enAdopcion)
                    @Html.ValidationMessageFor(model => model.enAdopcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


       







        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Ir a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
